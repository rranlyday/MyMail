<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.UserMapper" >
  <resultMap id="BaseResultMap" type="model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="we_chat" property="weChat" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cellphone, pwd, full_name, idcard, sex, email, qq, we_chat, credit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, cellphone, pwd, 
      full_name, idcard, sex, 
      email, qq, we_chat, 
      credit)
    values (#{id,jdbcType=INTEGER}, #{cellphone,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{fullName,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{weChat,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.User" useGeneratedKeys="true" keyProperty="id">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cellphone != null" >
        cellphone,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="fullName != null" >
        full_name,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="weChat != null" >
        we_chat,
      </if>
      <if test="credit != null" >
        credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cellphone != null" >
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null" >
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weChat != null" >
        #{weChat,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cellphone != null" >
        cellphone = #{record.cellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.fullName != null" >
        full_name = #{record.fullName,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.weChat != null" >
        we_chat = #{record.weChat,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      cellphone = #{record.cellphone,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      we_chat = #{record.weChat,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.User" >
    update user
    <set >
      <if test="cellphone != null" >
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="fullName != null" >
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weChat != null" >
        we_chat = #{weChat,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.User" >
    update user
    set cellphone = #{cellphone,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      full_name = #{fullName,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      we_chat = #{weChat,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="login" resultMap="BaseResultMap" parameterType="model.User" >
    select
    <include refid="Base_Column_List" />
    from user
    where cellphone = #{cellphone,jdbcType=VARCHAR} and
    pwd = #{pwd,jdbcType=VARCHAR}
  </select>

  <select id="selectUserIdList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>

  <select id="selectUserListPaging" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from user
    ORDER BY id
    limit  #{beginePosition,jdbcType=INTEGER},#{perPageSize,jdbcType=INTEGER}
  </select>

</mapper>